{"ast":null,"code":"var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\nvar _requestId, _options, _websocketClient, _getWebsocketClient, getWebsocketClient_fn;\nimport { PACKAGE_VERSION, TARGETED_RPC_VERSION } from \"../version.js\";\nimport { JsonRpcError, SuiHTTPStatusError } from \"./errors.js\";\nimport { WebsocketClient } from \"./rpc-websocket-client.js\";\nclass SuiHTTPTransport {\n  constructor(options) {\n    __privateAdd(this, _getWebsocketClient);\n    __privateAdd(this, _requestId, 0);\n    __privateAdd(this, _options, void 0);\n    __privateAdd(this, _websocketClient, void 0);\n    __privateSet(this, _options, options);\n  }\n  fetch(input, init) {\n    const fetch = __privateGet(this, _options).fetch ?? globalThis.fetch;\n    if (!this.fetch) {\n      throw new Error(\"The current environment does not support fetch, you can provide a fetch implementation in the options for SuiHTTPTransport.\");\n    }\n    return fetch(input, init);\n  }\n  async request(input) {\n    __privateSet(this, _requestId, __privateGet(this, _requestId) + 1);\n    const res = await this.fetch(__privateGet(this, _options).rpc?.url ?? __privateGet(this, _options).url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Client-Sdk-Type\": \"typescript\",\n        \"Client-Sdk-Version\": PACKAGE_VERSION,\n        \"Client-Target-Api-Version\": TARGETED_RPC_VERSION,\n        ...__privateGet(this, _options).rpc?.headers\n      },\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        id: __privateGet(this, _requestId),\n        method: input.method,\n        params: input.params\n      })\n    });\n    if (!res.ok) {\n      throw new SuiHTTPStatusError(`Unexpected status code: ${res.status}`, res.status, res.statusText);\n    }\n    const data = await res.json();\n    if (\"error\" in data && data.error != null) {\n      throw new JsonRpcError(data.error.message, data.error.code);\n    }\n    return data.result;\n  }\n  async subscribe(input) {\n    const unsubscribe = await __privateMethod(this, _getWebsocketClient, getWebsocketClient_fn).call(this).subscribe(input);\n    return async () => !!(await unsubscribe());\n  }\n}\n_requestId = new WeakMap();\n_options = new WeakMap();\n_websocketClient = new WeakMap();\n_getWebsocketClient = new WeakSet();\ngetWebsocketClient_fn = function () {\n  if (!__privateGet(this, _websocketClient)) {\n    const WebSocketConstructor = __privateGet(this, _options).WebSocketConstructor ?? globalThis.WebSocket;\n    if (!WebSocketConstructor) {\n      throw new Error(\"The current environment does not support WebSocket, you can provide a WebSocketConstructor in the options for SuiHTTPTransport.\");\n    }\n    __privateSet(this, _websocketClient, new WebsocketClient(__privateGet(this, _options).websocket?.url ?? __privateGet(this, _options).url, {\n      WebSocketConstructor: __privateGet(this, _options).WebSocketConstructor,\n      ...__privateGet(this, _options).websocket\n    }));\n  }\n  return __privateGet(this, _websocketClient);\n};\nexport { SuiHTTPTransport };","map":{"version":3,"names":["_requestId","_options","_websocketClient","_getWebsocketClient","getWebsocketClient_fn","PACKAGE_VERSION","TARGETED_RPC_VERSION","JsonRpcError","SuiHTTPStatusError","WebsocketClient","SuiHTTPTransport","constructor","options","__privateAdd","__privateSet","fetch","input","init","__privateGet","globalThis","Error","request","res","rpc","url","method","headers","body","JSON","stringify","jsonrpc","id","params","ok","status","statusText","data","json","error","message","code","result","subscribe","unsubscribe","__privateMethod","call","WeakMap","WeakSet","WebSocketConstructor","WebSocket","websocket"],"sources":["/home/andrei/proiect-itb/token/frontend/node_modules/@mysten/sui.js/src/client/http-transport.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { PACKAGE_VERSION, TARGETED_RPC_VERSION } from '../version.js';\nimport { JsonRpcError, SuiHTTPStatusError } from './errors.js';\nimport type { WebsocketClientOptions } from './rpc-websocket-client.js';\nimport { WebsocketClient } from './rpc-websocket-client.js';\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = { [header: string]: string };\n\ninterface SuiHTTPTransportOptions {\n\tfetch?: typeof fetch;\n\tWebSocketConstructor?: typeof WebSocket;\n\turl: string;\n\trpc?: {\n\t\theaders?: HttpHeaders;\n\t\turl?: string;\n\t};\n\twebsocket?: WebsocketClientOptions & {\n\t\turl?: string;\n\t};\n}\n\nexport interface SuiTransportRequestOptions {\n\tmethod: string;\n\tparams: unknown[];\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nexport interface SuiTransportSubscribeOptions<T> {\n\tmethod: string;\n\tunsubscribe: string;\n\tparams: unknown[];\n\tonMessage: (event: T) => void;\n}\n\nexport interface SuiTransport {\n\trequest<T = unknown>(input: SuiTransportRequestOptions): Promise<T>;\n\tsubscribe<T = unknown>(input: SuiTransportSubscribeOptions<T>): Promise<() => Promise<boolean>>;\n}\n\nexport class SuiHTTPTransport implements SuiTransport {\n\t#requestId = 0;\n\t#options: SuiHTTPTransportOptions;\n\t#websocketClient?: WebsocketClient;\n\n\tconstructor(options: SuiHTTPTransportOptions) {\n\t\tthis.#options = options;\n\t}\n\n\tfetch(input: RequestInfo, init?: RequestInit): Promise<Response> {\n\t\tconst fetch = this.#options.fetch ?? globalThis.fetch;\n\n\t\tif (!this.fetch) {\n\t\t\tthrow new Error(\n\t\t\t\t'The current environment does not support fetch, you can provide a fetch implementation in the options for SuiHTTPTransport.',\n\t\t\t);\n\t\t}\n\n\t\treturn fetch(input, init);\n\t}\n\n\t#getWebsocketClient(): WebsocketClient {\n\t\tif (!this.#websocketClient) {\n\t\t\tconst WebSocketConstructor = this.#options.WebSocketConstructor ?? globalThis.WebSocket;\n\t\t\tif (!WebSocketConstructor) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'The current environment does not support WebSocket, you can provide a WebSocketConstructor in the options for SuiHTTPTransport.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.#websocketClient = new WebsocketClient(\n\t\t\t\tthis.#options.websocket?.url ?? this.#options.url,\n\t\t\t\t{\n\t\t\t\t\tWebSocketConstructor: this.#options.WebSocketConstructor,\n\t\t\t\t\t...this.#options.websocket,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn this.#websocketClient;\n\t}\n\n\tasync request<T>(input: SuiTransportRequestOptions): Promise<T> {\n\t\tthis.#requestId += 1;\n\n\t\tconst res = await this.fetch(this.#options.rpc?.url ?? this.#options.url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Client-Sdk-Type': 'typescript',\n\t\t\t\t'Client-Sdk-Version': PACKAGE_VERSION,\n\t\t\t\t'Client-Target-Api-Version': TARGETED_RPC_VERSION,\n\t\t\t\t...this.#options.rpc?.headers,\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tjsonrpc: '2.0',\n\t\t\t\tid: this.#requestId,\n\t\t\t\tmethod: input.method,\n\t\t\t\tparams: input.params,\n\t\t\t}),\n\t\t});\n\n\t\tif (!res.ok) {\n\t\t\tthrow new SuiHTTPStatusError(\n\t\t\t\t`Unexpected status code: ${res.status}`,\n\t\t\t\tres.status,\n\t\t\t\tres.statusText,\n\t\t\t);\n\t\t}\n\n\t\tconst data = await res.json();\n\n\t\tif ('error' in data && data.error != null) {\n\t\t\tthrow new JsonRpcError(data.error.message, data.error.code);\n\t\t}\n\n\t\treturn data.result;\n\t}\n\n\tasync subscribe<T>(input: SuiTransportSubscribeOptions<T>): Promise<() => Promise<boolean>> {\n\t\tconst unsubscribe = await this.#getWebsocketClient().subscribe(input);\n\n\t\treturn async () => !!(await unsubscribe());\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}