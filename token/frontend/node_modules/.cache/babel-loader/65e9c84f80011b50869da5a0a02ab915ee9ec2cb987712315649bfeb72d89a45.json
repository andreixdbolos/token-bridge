{"ast":null,"code":"var _jsxFileName = \"/home/andrei/proiect-itb/token/frontend/src/components/TokenBridge.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './TokenBridge.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenBridge = () => {\n  _s();\n  const [direction, setDirection] = useState('eth-to-sui');\n  const [amount, setAmount] = useState('');\n  const [ethAccount, setEthAccount] = useState('');\n  const [suiAccount, setSuiAccount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const connectEthWallet = async () => {\n    try {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setEthAccount(accounts[0]);\n      } else {\n        throw new Error('Please install MetaMask to use this feature');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const response = await fetch('http://localhost:5000/api/bridge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          direction,\n          amount,\n          ethAccount,\n          suiAccount\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Bridge operation failed');\n      }\n      setSuccess(`Bridge operation successful! Transaction Hash: ${direction === 'eth-to-sui' ? data.mintTxDigest : data.burnTxDigest}`);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bridge-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bridge-title\",\n      children: \"Token Bridge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bridge-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Direction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: direction,\n          onChange: e => setDirection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"eth-to-sui\",\n            children: \"Ethereum to Sui\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sui-to-eth\",\n            children: \"Sui to Ethereum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ethereum Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eth-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ethAccount,\n            onChange: e => setEthAccount(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: connectEthWallet,\n            className: \"connect-button\",\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sui Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: suiAccount,\n          onChange: e => setSuiAccount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Bridge Tokens'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenBridge, \"D1hPo41ogokSc2FBH0vbaOYj/B8=\");\n_c = TokenBridge;\nexport default TokenBridge;\nvar _c;\n$RefreshReg$(_c, \"TokenBridge\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","TokenBridge","_s","direction","setDirection","amount","setAmount","ethAccount","setEthAccount","suiAccount","setSuiAccount","loading","setLoading","error","setError","success","setSuccess","connectEthWallet","window","ethereum","accounts","request","method","Error","err","message","handleSubmit","e","preventDefault","response","fetch","headers","body","JSON","stringify","data","json","ok","mintTxDigest","burnTxDigest","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","required","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/andrei/proiect-itb/token/frontend/src/components/TokenBridge.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './TokenBridge.css';\n\nconst TokenBridge = () => {\n  const [direction, setDirection] = useState('eth-to-sui');\n  const [amount, setAmount] = useState('');\n  const [ethAccount, setEthAccount] = useState('');\n  const [suiAccount, setSuiAccount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const connectEthWallet = async () => {\n    try {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setEthAccount(accounts[0]);\n      } else {\n        throw new Error('Please install MetaMask to use this feature');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      const response = await fetch('http://localhost:5000/api/bridge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          direction,\n          amount,\n          ethAccount,\n          suiAccount,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Bridge operation failed');\n      }\n\n      setSuccess(`Bridge operation successful! Transaction Hash: ${\n        direction === 'eth-to-sui' ? data.mintTxDigest : data.burnTxDigest\n      }`);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bridge-container\">\n      <h2 className=\"bridge-title\">Token Bridge</h2>\n      \n      <form onSubmit={handleSubmit} className=\"bridge-form\">\n        <div className=\"form-group\">\n          <label>Direction</label>\n          <select\n            value={direction}\n            onChange={(e) => setDirection(e.target.value)}\n          >\n            <option value=\"eth-to-sui\">Ethereum to Sui</option>\n            <option value=\"sui-to-eth\">Sui to Ethereum</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Ethereum Account</label>\n          <div className=\"eth-input-container\">\n            <input\n              type=\"text\"\n              value={ethAccount}\n              onChange={(e) => setEthAccount(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              onClick={connectEthWallet}\n              className=\"connect-button\"\n            >\n              Connect\n            </button>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Sui Account</label>\n          <input\n            type=\"text\"\n            value={suiAccount}\n            onChange={(e) => setSuiAccount(e.target.value)}\n            required\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"submit-button\"\n        >\n          {loading ? 'Processing...' : 'Bridge Tokens'}\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      {success && (\n        <div className=\"success-message\">\n          {success}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TokenBridge; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}