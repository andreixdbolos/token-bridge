{"ast":null,"code":"// src/index.ts\nexport * from \"@wallet-standard/core\";\n\n// src/detect.ts\nvar REQUIRED_FEATURES = [\"standard:connect\", \"standard:events\"];\nfunction isWalletWithSuiFeatures(wallet, features = []) {\n  return [...REQUIRED_FEATURES, ...features].every(feature => feature in wallet.features);\n}\nfunction isWalletWithRequiredFeatureSet(wallet, additionalFeatures = []) {\n  return [...REQUIRED_FEATURES, ...additionalFeatures].every(feature => feature in wallet.features);\n}\n\n// src/chains.ts\nvar SUI_DEVNET_CHAIN = \"sui:devnet\";\nvar SUI_TESTNET_CHAIN = \"sui:testnet\";\nvar SUI_LOCALNET_CHAIN = \"sui:localnet\";\nvar SUI_MAINNET_CHAIN = \"sui:mainnet\";\nvar SUI_CHAINS = [SUI_DEVNET_CHAIN, SUI_TESTNET_CHAIN, SUI_LOCALNET_CHAIN, SUI_MAINNET_CHAIN];\nexport { SUI_CHAINS, SUI_DEVNET_CHAIN, SUI_LOCALNET_CHAIN, SUI_MAINNET_CHAIN, SUI_TESTNET_CHAIN, isWalletWithRequiredFeatureSet, isWalletWithSuiFeatures };","map":{"version":3,"names":["REQUIRED_FEATURES","isWalletWithSuiFeatures","wallet","features","every","feature","isWalletWithRequiredFeatureSet","additionalFeatures","SUI_DEVNET_CHAIN","SUI_TESTNET_CHAIN","SUI_LOCALNET_CHAIN","SUI_MAINNET_CHAIN","SUI_CHAINS"],"sources":["/home/andrei/proiect-itb/token/frontend/node_modules/@mysten/wallet-standard/src/index.ts","/home/andrei/proiect-itb/token/frontend/node_modules/@mysten/wallet-standard/src/detect.ts","/home/andrei/proiect-itb/token/frontend/node_modules/@mysten/wallet-standard/src/chains.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from '@wallet-standard/core';\n\nexport * from './features';\nexport * from './detect';\nexport * from './chains';\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Wallet, WalletWithFeatures } from '@wallet-standard/core';\n\nimport { MinimallyRequiredFeatures, WalletWithSuiFeatures } from './features';\n\n// These features are absolutely required for wallets to function in the Sui ecosystem.\n// Eventually, as wallets have more consistent support of features, we may want to extend this list.\nconst REQUIRED_FEATURES: (keyof MinimallyRequiredFeatures)[] = [\n\t'standard:connect',\n\t'standard:events',\n];\n\n/** @deprecated Use isWalletWithRequiredFeatureSet instead since it provides more accurate typing! */\nexport function isWalletWithSuiFeatures(\n\twallet: Wallet,\n\t/** Extra features that are required to be present, in addition to the expected feature set. */\n\tfeatures: string[] = [],\n): wallet is WalletWithSuiFeatures {\n\treturn [...REQUIRED_FEATURES, ...features].every((feature) => feature in wallet.features);\n}\n\nexport function isWalletWithRequiredFeatureSet<AdditionalFeatures extends Wallet['features']>(\n\twallet: Wallet,\n\tadditionalFeatures: (keyof AdditionalFeatures)[] = [],\n): wallet is WalletWithFeatures<MinimallyRequiredFeatures & AdditionalFeatures> {\n\treturn [...REQUIRED_FEATURES, ...additionalFeatures].every(\n\t\t(feature) => feature in wallet.features,\n\t);\n}\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/** Sui Devnet */\nexport const SUI_DEVNET_CHAIN = 'sui:devnet';\n\n/** Sui Testnet */\nexport const SUI_TESTNET_CHAIN = 'sui:testnet';\n\n/** Sui Localnet */\nexport const SUI_LOCALNET_CHAIN = 'sui:localnet';\n\n/** Sui Mainnet */\nexport const SUI_MAINNET_CHAIN = 'sui:mainnet';\n\nexport const SUI_CHAINS = [\n\tSUI_DEVNET_CHAIN,\n\tSUI_TESTNET_CHAIN,\n\tSUI_LOCALNET_CHAIN,\n\tSUI_MAINNET_CHAIN,\n] as const;\n\nexport type SuiChain =\n\t| typeof SUI_DEVNET_CHAIN\n\t| typeof SUI_TESTNET_CHAIN\n\t| typeof SUI_LOCALNET_CHAIN\n\t| typeof SUI_MAINNET_CHAIN;\n"],"mappings":";AAGA,cAAc;;;ACMd,IAAMA,iBAAA,GAAyD,CAC9D,oBACA,kBACD;AAGO,SAASC,wBACfC,MAAA,EAEAC,QAAA,GAAqB,EAAC,EACY;EAClC,OAAO,CAAC,GAAGH,iBAAA,EAAmB,GAAGG,QAAQ,EAAEC,KAAA,CAAOC,OAAA,IAAYA,OAAA,IAAWH,MAAA,CAAOC,QAAQ;AACzF;AAEO,SAASG,+BACfJ,MAAA,EACAK,kBAAA,GAAmD,EAAC,EAC2B;EAC/E,OAAO,CAAC,GAAGP,iBAAA,EAAmB,GAAGO,kBAAkB,EAAEH,KAAA,CACnDC,OAAA,IAAYA,OAAA,IAAWH,MAAA,CAAOC,QAChC;AACD;;;AC1BO,IAAMK,gBAAA,GAAmB;AAGzB,IAAMC,iBAAA,GAAoB;AAG1B,IAAMC,kBAAA,GAAqB;AAG3B,IAAMC,iBAAA,GAAoB;AAE1B,IAAMC,UAAA,GAAa,CACzBJ,gBAAA,EACAC,iBAAA,EACAC,kBAAA,EACAC,iBAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}