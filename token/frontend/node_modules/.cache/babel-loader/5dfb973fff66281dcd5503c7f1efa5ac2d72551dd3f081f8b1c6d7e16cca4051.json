{"ast":null,"code":"import { hexToBytes } from \"@noble/hashes/utils\";\nfunction findFirstNonZeroIndex(bytes) {\n  for (let i = 0; i < bytes.length; i++) {\n    if (bytes[i] !== 0) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction toPaddedBigEndianBytes(num, width) {\n  const hex = num.toString(16);\n  return hexToBytes(hex.padStart(width * 2, \"0\").slice(-width * 2));\n}\nfunction toBigEndianBytes(num, width) {\n  const bytes = toPaddedBigEndianBytes(num, width);\n  const firstNonZeroIndex = findFirstNonZeroIndex(bytes);\n  if (firstNonZeroIndex === -1) {\n    return new Uint8Array([0]);\n  }\n  return bytes.slice(firstNonZeroIndex);\n}\nexport { toBigEndianBytes, toPaddedBigEndianBytes };","map":{"version":3,"names":["hexToBytes","findFirstNonZeroIndex","bytes","i","length","toPaddedBigEndianBytes","num","width","hex","toString","padStart","slice","toBigEndianBytes","firstNonZeroIndex","Uint8Array"],"sources":["/home/andrei/proiect-itb/token/frontend/node_modules/@mysten/sui.js/src/zklogin/utils.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { hexToBytes } from '@noble/hashes/utils';\n\nfunction findFirstNonZeroIndex(bytes: Uint8Array) {\n\tfor (let i = 0; i < bytes.length; i++) {\n\t\tif (bytes[i] !== 0) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n// Derive bytearray from num where the bytearray is padded to the left with 0s to the specified width.\nexport function toPaddedBigEndianBytes(num: bigint, width: number): Uint8Array {\n\tconst hex = num.toString(16);\n\treturn hexToBytes(hex.padStart(width * 2, '0').slice(-width * 2));\n}\n\n// Derive bytearray from num where the bytearray is not padded with 0.\nexport function toBigEndianBytes(num: bigint, width: number): Uint8Array {\n\tconst bytes = toPaddedBigEndianBytes(num, width);\n\n\tconst firstNonZeroIndex = findFirstNonZeroIndex(bytes);\n\n\tif (firstNonZeroIndex === -1) {\n\t\treturn new Uint8Array([0]);\n\t}\n\n\treturn bytes.slice(firstNonZeroIndex);\n}\n"],"mappings":"AAGA,SAASA,UAAA,QAAkB;AAE3B,SAASC,sBAAsBC,KAAA,EAAmB;EACjD,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAID,KAAA,CAAME,MAAA,EAAQD,CAAA,IAAK;IACtC,IAAID,KAAA,CAAMC,CAAC,MAAM,GAAG;MACnB,OAAOA,CAAA;IACR;EACD;EAEA,OAAO;AACR;AAGO,SAASE,uBAAuBC,GAAA,EAAaC,KAAA,EAA2B;EAC9E,MAAMC,GAAA,GAAMF,GAAA,CAAIG,QAAA,CAAS,EAAE;EAC3B,OAAOT,UAAA,CAAWQ,GAAA,CAAIE,QAAA,CAASH,KAAA,GAAQ,GAAG,GAAG,EAAEI,KAAA,CAAM,CAACJ,KAAA,GAAQ,CAAC,CAAC;AACjE;AAGO,SAASK,iBAAiBN,GAAA,EAAaC,KAAA,EAA2B;EACxE,MAAML,KAAA,GAAQG,sBAAA,CAAuBC,GAAA,EAAKC,KAAK;EAE/C,MAAMM,iBAAA,GAAoBZ,qBAAA,CAAsBC,KAAK;EAErD,IAAIW,iBAAA,KAAsB,IAAI;IAC7B,OAAO,IAAIC,UAAA,CAAW,CAAC,CAAC,CAAC;EAC1B;EAEA,OAAOZ,KAAA,CAAMS,KAAA,CAAME,iBAAiB;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}